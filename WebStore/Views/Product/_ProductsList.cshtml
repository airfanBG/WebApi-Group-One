@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using Services.CustomModels;
@inject Services.Implementations.ProductSalesManager sales;

@model IPagedList<ProductModel>
@*<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />*@

<h1>Products</h1>
<table class="table">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">@Html.LabelFor(x => Model[0].Name)</th>
            <th scope="col">@Html.LabelFor(x => Model[0].ProductPrice)</th>
            <th scope="col">@Html.LabelFor(x => Model[0].Description)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
           
                <tr>

                    <th scope="row" id="productId" data-id="@item.Id">@item.Id</th>
                    <td>@item.Name</td>
                    <td>@item.ProductPrice</td>
                    <td>@item.Description</td>
                    <td><input id="quantity" type="number"  name="quantity" value="" /></td>
                    <td><div id="add" class="btn btn-success">Add</div></td>
                </tr>
           
        }
    </tbody>
</table>

@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))

<script>
   
    $("#add").on("click", function () {
        var id = $("#productId").data("id");
        var q = $("#quantity").val();

        $.ajax({
            method: "POST",
            url: '@Url.Action("AddProduct", "Order")',
            data: { 'productId': id, 'quantity': q},
            success: function () {
               
            }
        });
    });
</script>